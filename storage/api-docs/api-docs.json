{
    "openapi": "3.0.0",
    "info": {
        "title": "Core Swagger",
        "description": "Swagger for streamfiuses core api",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/api/content ": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "description": "Get all contents",
                "operationId": "App\\Http\\Controllers\\ContentController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    }
                }
            }
        },
        "/api/content": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "WIP | Store a new content",
                "operationId": "App\\Http\\Controllers\\ContentController::store",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    }
                }
            }
        },
        "/api/content/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "Numeric ID of the content to get."
                    }
                ],
                "description": "Get one specific content",
                "operationId": "App\\Http\\Controllers\\ContentController::show",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/content/{id} ": {
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "Numeric ID of the content to update."
                    }
                ],
                "description": "WIP | Update a specific content",
                "operationId": "App\\Http\\Controllers\\ContentController::update",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/content/{id}  ": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "Numeric ID of the content to delete."
                    }
                ],
                "description": "Delete a specific content",
                "operationId": "App\\Http\\Controllers\\ContentController::destroy",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/content/multiple/{content_ids}  ": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Content"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_ids",
                        "type": "string",
                        "required": true,
                        "description": "Json array string of content ids to fetch"
                    }
                ],
                "description": "Delete a specific content",
                "operationId": "App\\Http\\Controllers\\ContentController::destroy",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "summary": "Endpoint to register a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Username",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "Users email",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "Password for user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "master_password",
                        "description": "Master password to insure that no unauthorized registrations take place on staging while developing",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "422": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "summary": "Endpoint to login a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [

                    {
                        "in": "query",
                        "name": "email",
                        "description": "The user to create.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The user to create.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "422": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Endpoint to logout a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "422": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        },
        "/api/fiuselist/user": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Endpoint to retrieve the fiuselist of the currently logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fiuselist"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "422": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints regarding the authentication of a user"
        },
        {
            "name": "Content",
            "description": "CRUD endpoints for contents"
        },
        {
            "name": "Fiuselist",
            "description": "Endpoint regarding the fiuselist (watchlist) of users"
        }
    ]
}
